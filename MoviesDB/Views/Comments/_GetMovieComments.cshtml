@model IEnumerable<MoviesDB.EF.Comments>
@*@model MoviesDB.ViewModels.PaginationViewModel<MoviesDB.EF.Comments>*@
@*@model PagedList.IPagedList<MoviesDB.EF.Comments>*@
<div class="row">
    <div class="col-12 col-xl-8">
        <!-- comments -->
        <div class="comments">
            <!-- tabs nav -->
            <ul class="nav comments__title comments__title--tabs" id="comments__tabs" role="tablist">
                <li class="nav-item">
                    <a class="nav-link active" data-toggle="tab" href="#tab-1" role="tab" aria-controls="tab-1" aria-selected="true">
                        <h4>Comments</h4>
                        <span>@Model.Where(x => x.ReplyId == 0).Count()</span>

                    </a>
                </li>
            </ul>
            <!-- end tabs nav -->
            <!-- tabs -->
            <div class="tab-content">
                <!-- comments -->
                <div class="tab-pane fade show active" id="tab-1" role="tabpanel">


                    @foreach (var item in Model.Where(x => x.ReplyId == 0))
                    {
                        <div class="tab-pane fade show active" id="tab-1" role="tabpanel">
                            <<ul class="comments__list">
                                <li class="comments__item">
                                    <div class="comments__autor">
                                        <img class="comments__avatar" src="~/Content/images/user.svg" alt="">
                                        <span class="comments__name">@item.Users.UserName</span>
                                        <span class="comments__time">@item.CreationDate</span>
                                    </div>
                                    <p class="comments__text">
                                        @item.Comment
                                    </p>
                                    @*<div class="comments__actions">
                                                <div class="comments__rate">
                                            <button type="button"><svg width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M11 7.3273V14.6537" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path><path d="M14.6667 10.9905H7.33333" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path><path fill-rule="evenodd" clip-rule="evenodd" d="M15.6857 1H6.31429C3.04762 1 1 3.31208 1 6.58516V15.4148C1 18.6879 3.0381 21 6.31429 21H15.6857C18.9619 21 21 18.6879 21 15.4148V6.58516C21 3.31208 18.9619 1 15.6857 1Z" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path></svg> 12</button>

                                            <button type="button">7 <svg width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M14.6667 10.9905H7.33333" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path><path fill-rule="evenodd" clip-rule="evenodd" d="M15.6857 1H6.31429C3.04762 1 1 3.31208 1 6.58516V15.4148C1 18.6879 3.0381 21 6.31429 21H15.6857C18.9619 21 21 18.6879 21 15.4148V6.58516C21 3.31208 18.9619 1 15.6857 1Z" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path></svg></button>
                                        </div>

                                                <button type="button"><svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><polyline points="400 160 464 224 400 288" style="fill:none;stroke-linecap:round;stroke-linejoin:round;stroke-width:32px"></polyline><path d="M448,224H154C95.24,224,48,273.33,48,332v20" style="fill:none;stroke-linecap:round;stroke-linejoin:round;stroke-width:32px"></path></svg><span>Reply</span></button>
                                            </div>*@
                                </li>
                                @*@foreach (var reply in Model.Where(r => r.ReplyId == item.Id))
                                    {
                                        <li class="comments__item comments__item--answer">
                                            <div class="comments__autor">
                                                <img class="comments__avatar" src="~/Content/images/user.svg" alt="">
                                                <span class="comments__name">@reply.Users.UserName</span>
                                                <span class="comments__time">@reply.CreationDate</span>
                                            </div>
                                            <p class="comments__text">
                                                @reply.Comment
                                            </p>
                                            <div class="comments__actions">
                                                <div class="comments__rate">
                                            <button type="button"><svg width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M11 7.3273V14.6537" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path><path d="M14.6667 10.9905H7.33333" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path><path fill-rule="evenodd" clip-rule="evenodd" d="M15.6857 1H6.31429C3.04762 1 1 3.31208 1 6.58516V15.4148C1 18.6879 3.0381 21 6.31429 21H15.6857C18.9619 21 21 18.6879 21 15.4148V6.58516C21 3.31208 18.9619 1 15.6857 1Z" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path></svg> 10</button>

                                            <button type="button">0 <svg width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M14.6667 10.9905H7.33333" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path><path fill-rule="evenodd" clip-rule="evenodd" d="M15.6857 1H6.31429C3.04762 1 1 3.31208 1 6.58516V15.4148C1 18.6879 3.0381 21 6.31429 21H15.6857C18.9619 21 21 18.6879 21 15.4148V6.58516C21 3.31208 18.9619 1 15.6857 1Z" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path></svg></button>
                                        </div>

                                                <button class="reply-btn" type="submit" data-comment-id="@item.Id"><svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><polyline points="400 160 464 224 400 288" style="fill:none;stroke-linecap:round;stroke-linejoin:round;stroke-width:32px"></polyline><path d="M448,224H154C95.24,224,48,273.33,48,332v20" style="fill:none;stroke-linecap:round;stroke-linejoin:round;stroke-width:32px"></path></svg><span>Reply</span></button>
                                            </div>
                                        </li>
                                    }*@

                            </ul>

                            @*, PageClass = new[] { "catalog__paginator-link" }*@

                        </div>
                    }
                </div>
                <!-- end comments -->
                @*<div class="catalog__paginator-wrap catalog__paginator-wrap--comments">
                        <span class="catalog__pages">@(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)  from @Model.PageCount</span>
                        <ul class="catalog__paginator">
                            @Html.PagedListPager(Model, page => Url.Action("_GetMovieComments", "Comments", new { id = Model.First().EntertainmentId, page }), new PagedListRenderOptions { Display = PagedListDisplayMode.IfNeeded, ContainerDivClasses = new[] { "catalog__paginator" }, UlElementClasses = new[] { "catalog__paginator-list" }, LiElementClasses = new[] { "catalog__paginator-item" }, LinkToPreviousPageFormat = "<li><a href=\"{0}\" rel=\"prev\" aria-label=\"Previous\">&laquo;</a></li>", LinkToNextPageFormat = "<li><a href=\"{0}\" rel=\"next\" aria-label=\"Next\">&raquo;</a></li>", LinkToFirstPageFormat = "<li><a href=\"{0}\" aria-label=\"First\">&laquo;&laquo;</a></li>", LinkToLastPageFormat = "<li><a href=\"{0}\" aria-label=\"Last\">&raquo;&raquo;</a></li>" })
                            @Html.PagedListPager(Model,
                                page => Url.Action("_GetMovieComments", "Comments", new { id = Model.First().EntertainmentId, page }),
                                new PagedListRenderOptions
                                {
                                    Display = PagedListDisplayMode.IfNeeded,
                                    ContainerDivClasses = new[] { "catalog__paginator" },
                                    UlElementClasses = new[] { "catalog__paginator-list" },
                                    LiElementClasses = new[] { "catalog__paginator-item" },
                                    LinkToPreviousPageFormat = "<li><a href=\"{0}\" rel=\"prev\" aria-label=\"Previous\">&laquo;</a></li>",
                                    LinkToNextPageFormat = "<li><a href=\"{0}\" rel=\"next\" aria-label=\"Next\">&raquo;</a></li>",
                                    LinkToFirstPageFormat = "<li><a href=\"{0}\" aria-label=\"First\">&laquo;&laquo;</a></li>",
                                    LinkToLastPageFormat = "<li><a href=\"{0}\" aria-label=\"Last\">&raquo;&raquo;</a></li>"
                                }
                                .EnableUnobtrusiveAjaxReplacing(new AjaxOptions { HttpMethod = "GET", UpdateTargetId = "itemListContainer" })
                            )

                        </ul>
                    </div>*@
                @*<div class="catalog__paginator-wrap catalog__paginator-wrap--comments">
                        <span class="catalog__pages">5 from 16</span>

                        <ul class="catalog__paginator">
                            @Html.PagedListPager(Model, page => Url.Action("Index", new { page }), PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new AjaxOptions { HttpMethod = "GET", UpdateTargetId = "itemListContainer" }))
                        </ul>
                    </div>*@
            </div>
            <!-- end tabs -->
            @if (Session["UserName"] != null)
            {
                <form action="#" method="post" class="comments__form">
                    <div class="sign__group">
                        <textarea id="text" name="text" class="sign__textarea" placeholder="Add comment"></textarea>
                    </div>
                    <button type="button" class="sign__btn">Send</button>
                </form>
            }

            <!-- end comments -->
        </div>
    </div>
</div>
